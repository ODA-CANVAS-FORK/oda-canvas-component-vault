variables:
  
  SIDECAR_VERSION: 0.1.0-rc
  OPERATOR_VERSION: 0.1.0-rc
  CODESERVER_VERSION: 4.22.0
  
  SIDECAR_IMAGE_TAG: component-vault-sidecar-${SIDECAR_VERSION}
  OPERATOR_IMAGE_TAG: component-vault-operator-${OPERATOR_VERSION}
  CODESERVER_IMAGE_TAG: code-server-with-helm-${CODESERVER_VERSION}
  MAGENTA_TRUSTED_REGISTRY: mtr.devops.telekom.de
  MTR_REPO: magenta_canvas/public
  MTR_IMAGE: ${MAGENTA_TRUSTED_REGISTRY}/${MTR_REPO}
  MTR_FULL_SIDECAR_IMAGE: ${MAGENTA_TRUSTED_REGISTRY}/${MTR_REPO}:${SIDECAR_IMAGE_TAG}
  MTR_FULL_OPERATOR_IMAGE: ${MAGENTA_TRUSTED_REGISTRY}/${MTR_REPO}:${OPERATOR_IMAGE_TAG}
  MTR_FULL_CODESERVER_IMAGE: ${MAGENTA_TRUSTED_REGISTRY}/${MTR_REPO}:${OPERATOR_IMAGE_TAG}
  
  DOCKER_REGISTRY_USERNAME: "magenta_canvas+builder"
  #DOCKER_REGISTRY_PASSWORD: "has to be defined in CICD variables"    
  
  SECRET_DETECTION_HISTORIC_SCAN: "true"

  HTTP_PROXY: $http_proxy
  HTTPS_PROXY: $https_proxy
  NO_PROXY: $no_proxy


include:
  - template: Security/Dependency-Scanning.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml
  # DevSecOps Container Scanner
  # https://gitlab.devops.telekom.de/devsecops-tools/container-scanner/-/blob/master/README.md
  - project: 'devsecops-tools/container-scanner'
    # can be set to a fixed version if one chooses to use a specific version. Default is master.
    ref: "master"
    file: 'container-scan.yml'



stages:
  - build
  - test
  - scan
  - sign



.build_template:
  image:
    name: gcr.io/kaniko-project/executor:v1.14.0-debug
    entrypoint: [""]
  stage: 
    build
  script:
    # https://github.com/GoogleContainerTools/kaniko?tab=readme-ov-file#pushing-to-different-registries
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${MAGENTA_TRUSTED_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${DOCKER_REGISTRY_USERNAME}" "${DOCKER_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor
      --registry-mirror dockerhub.devops.telekom.de
      --context $CI_PROJECT_DIR/$BUILD_FOLDER
      --dockerfile $CI_PROJECT_DIR/$BUILD_FOLDER/Dockerfile 
      --destination $MTR_FULL_IMAGE
      --build-arg http_proxy=$http_proxy
      --build-arg https_proxy=$https_proxy
      --build-arg no_proxy=$no_proxy


build_sidecar:
  extends: .build_template
  variables:
    BUILD_FOLDER: source/component-vault/sidecars/componentvaultsidecar-hc
    MTR_FULL_IMAGE: $MTR_FULL_SIDECAR_IMAGE
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
      when: manual
      allow_failure: true
    - changes:
      - "source/component-vault/sidecars/componentvaultsidecar-hc/**/*"
    - when: manual
      allow_failure: true



build_operator:
  extends: .build_template
  variables:
    BUILD_FOLDER: source/component-vault/operators/componentvaultoperator-hc/docker
    MTR_FULL_IMAGE: $MTR_FULL_OPERATOR_IMAGE
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
      when: manual
      allow_failure: true
    - changes:
      - "source/component-vault/operators/componentvaultoperator-hc/docker/**/*"
    - when: manual
      allow_failure: true


.build_template_docker:
  stage: build
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  services:
    - name: 'dockerhub.devops.telekom.de/docker:dind'
      command: ['--tls=false', '--host=tcp://0.0.0.0:2375', '--registry-mirror=https://dockerhub.devops.telekom.de']
      alias: docker
  image: docker:20.10.6
  tags:
    - otc_run_sysbox_s
  script:
    - docker login --username=$DOCKER_REGISTRY_USERNAME --password=$DOCKER_REGISTRY_PASSWORD $MAGENTA_TRUSTED_REGISTRY
    - cd $BUILD_FOLDER
    - docker build -t $MTR_FULL_IMAGE . 
    - docker push $MTR_FULL_IMAGE


build_codeserver:
  extends: .build_template_docker
  variables:
    BUILD_FOLDER: source/component-vault/custom/code-server/code-server-with-helm
    MTR_FULL_IMAGE: $MTR_FULL_CODESERVER_IMAGE
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
      when: manual
      allow_failure: true
    - changes:
      - "source/component-vault/custom/code-server/code-server-with-helm/**/*"
    - when: manual
      allow_failure: true




.scan_template:
  extends: .container_scan
  stage: scan
  variables:
    SCAN_REGISTRY: ${MAGENTA_TRUSTED_REGISTRY}
    SCAN_REGISTRY_IMAGE: ${MTR_IMAGE}
    SCAN_REGISTRY_TAG: ${IMAGE_TAG}
    SCAN_REGISTRY_USER: ${DOCKER_REGISTRY_USERNAME}
    SCAN_REGISTRY_PASSWORD: "${DOCKER_REGISTRY_PASSWORD}"
    MAX_SEVERITY: critical
    FAIL_PIPELINE: "false"
  artifacts:
    when: always
    expire_in: 1 week
    paths:
      - scanresults/*


scan_sidecar:
  extends: .scan_template
  variables:
    IMAGE_TAG: $SIDECAR_IMAGE_TAG
  needs:
    - build_sidecar

scan_operator:
  extends: .scan_template
  variables:
    IMAGE_TAG: $OPERATOR_IMAGE_TAG
  needs:
    - build_operator

scan_codeserver:
  extends: .scan_template
  variables:
    IMAGE_TAG: $CODESERVER_IMAGE_TAG
  needs:
    - build_codeserver


.sign_template:
  stage: sign
  image: dockerhub.devops.telekom.de/bitnami/cosign
  script:
    # echo setup credentials for MTR with access to repository
    - export DOCKER_CONFIG=$(pwd)/.docker
    - mkdir -p $DOCKER_CONFIG
    - echo "{\"auths\":{\"${MAGENTA_TRUSTED_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${DOCKER_REGISTRY_USERNAME}" "${DOCKER_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}"  > $DOCKER_CONFIG/config.json
    # sign with private key
    # the environment variable COSIGN_PASSWORD has to be set in CICD variables!
    - cosign sign --tlog-upload=false --key $COSIGN_PRIVATE_KEY $MTR_FULL_IMAGE


sign_sidecar:
  extends: .sign_template
  variables:
    MTR_FULL_IMAGE: $MTR_FULL_SIDECAR_IMAGE
  needs:
    - scan_sidecar

sign_operator:
  extends: .sign_template
  variables:
    MTR_FULL_IMAGE: $MTR_FULL_OPERATOR_IMAGE
  needs:
    - scan_operator

sign_codeserver:
  extends: .sign_template
  variables:
    MTR_FULL_IMAGE: $MTR_FULL_CODESERVER_IMAGE
  needs:
    - scan_codeserver

